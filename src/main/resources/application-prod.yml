spring:
  server:
    port: 8080
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${address}:${port}/${schema}?useSSL=false&allowPublicKeyRetrieval=true
    username: ${username}
    password: ${password}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_batch_fetch_size: 100
  servlet:
#    multipart:
#      max-file-size: 50MB
#      max-request-size: 50MB
  security:
    require:
      ssl: true
    oauth2:
      client:
        registration:
          naver:
            client-id: ${naver-id}
            client-secret: ${naver-secret}
            authorization-grant-type: authorization_code
            client-name: independe
            redirect-uri: http://${deployUrl}/oauth2/login/oauth2/code/naver
            scope:
          kakao:
            client-id: ${kakao-id}
            client-secret: ${kakao-secret}
            clientAuthenticationMethod: POST
            authorization-grant-type: authorization_code
            client-name: Independe
            redirect-uri: http://${deployUrl}/oauth2/login/oauth2/code/kakao
            scope: profile_nickname
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            # OpenID Connect 일 경우 jwkSet URI 를 가져와야 하기 때문에 필수항목
            issuerUri: https://kauth.kakao.com
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            jwk-set-uri: https://kauth.kakao.com/.well-known/jwks.json
            user-name-attribute: id # OpenID Connect 로 인가서버와 통신하지 않을 경우