plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	// jacoco 추가
	id 'jacoco'
}

// jacoco 추가
jacoco {
	toolVersion = "0.8.7" // JaCoCo 버전을 필요에 맞게 업데이트하세요.
}

group = 'community'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator' //actuator 추가
	implementation 'io.micrometer:micrometer-registry-prometheus' // 프로메테우스 추가
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// commons-io 이미지 파일 변환
	implementation 'commons-io:commons-io:2.11.0'

	// Swagger 추가
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// redis 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// p6spy 추가
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// s3 추가
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 테스트 태스크 설정
test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // 테스트 후 JaCoCo 리포트 생성
}

// JaCoCo 리포트 설정
jacocoTestReport {
	reports {
		xml.enabled true // XML 리포트 활성화
		html.enabled true // HTML 리포트 활성화
		csv.enabled false // CSV 리포트 비활성화 (선택적)
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/Q*.class",
					"**/*Dto.*",
					"**/*dto*"
			])
		}))
	}
}
